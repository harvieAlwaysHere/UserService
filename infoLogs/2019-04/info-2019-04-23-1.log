[15:51:05:543] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[15:51:05:868] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1658b99d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:51:07:039] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[15:51:08:675] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[15:51:08:677] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[15:51:08:701] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.
[15:51:08:859] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[15:51:09:176] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=853cdb29-fb84-3289-8d38-8c2c3bd1ac4d
[15:51:09:322] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fa3eb6a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:51:09:393] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$35688d6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:51:09:423] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$79bf03d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:51:09:428] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1658b99d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:51:10:090] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[15:51:10:103] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[15:51:10:114] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[15:51:10:114] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[15:51:10:132] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[15:51:10:331] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[15:51:10:332] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3273 ms
[15:51:10:440] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[15:51:10:441] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[15:51:10:448] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4671f28b
[15:51:12:178] [WARN] - org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'restTemplate'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.web.client.RestTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[15:51:12:197] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Stopping service [Tomcat]
[15:51:12:214] [INFO] - org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:142) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[15:51:12:418] [ERROR] - org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:858) - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'restTemplate'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.web.client.RestTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at top.harvie.ProjectTeam.ProjectTeamApplication.main(ProjectTeamApplication.java:18) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.1.3.RELEASE.jar:2.1.3.RELEASE]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'restTemplate'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.web.client.RestTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.web.client.RestTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1654) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1213) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
[15:53:33:700] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[15:53:33:945] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c34db6ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:53:35:070] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[15:53:36:548] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[15:53:36:551] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[15:53:36:579] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.
[15:53:36:748] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[15:53:37:070] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[15:53:37:288] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a733b3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:53:37:442] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$e25d8a7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:53:37:493] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$26b400e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:53:37:503] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c34db6ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[15:53:38:215] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[15:53:38:231] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[15:53:38:246] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[15:53:38:247] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[15:53:38:254] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[15:53:38:473] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[15:53:38:474] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3389 ms
[15:53:38:584] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[15:53:38:585] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[15:53:38:590] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@c1f85b8
[15:53:40:830] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[15:53:40:913] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[15:53:40:913] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[15:53:41:049] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[15:53:41:103] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[15:53:42:738] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[15:53:42:770] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[15:53:42:913] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[15:53:42:913] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[15:53:43:043] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[15:53:43:044] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[15:53:43:224] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[15:53:43:786] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[15:53:43:787] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[15:53:43:983] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[15:53:43:986] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[15:53:43:989] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[15:53:43:994] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556006023992 with initial instances count: 3
[15:53:43:997] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[15:53:43:998] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556006023998, current=UP, previous=STARTING]
[15:53:44:000] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[15:53:44:019] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[15:53:44:033] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[15:53:44:052] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[15:53:44:060] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[15:53:44:065] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[15:53:44:066] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[15:53:44:067] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:067] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[15:53:44:067] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:068] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[15:53:44:068] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:069] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[15:53:44:069] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:070] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[15:53:44:070] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:071] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[15:53:44:071] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[15:53:44:072] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[15:53:44:075] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[15:53:44:077] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[15:53:44:105] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:105] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:113] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:114] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:123] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[15:53:44:124] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[15:53:44:146] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[15:53:44:155] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[15:53:44:166] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:167] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:167] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:168] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:168] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:186] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:186] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:186] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:186] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:187] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[15:53:44:187] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[15:53:44:189] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[15:53:44:191] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[15:53:44:193] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:193] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:193] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:193] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:194] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[15:53:44:194] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[15:53:44:196] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[15:53:44:198] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[15:53:44:202] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:203] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:203] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:204] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:204] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[15:53:44:204] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[15:53:44:209] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[15:53:44:212] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[15:53:44:215] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:215] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:215] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:215] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:216] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[15:53:44:216] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[15:53:44:217] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[15:53:44:220] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[15:53:44:223] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:223] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:224] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:224] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:224] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[15:53:44:225] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[15:53:44:227] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[15:53:44:228] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[15:53:44:229] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:230] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[15:53:44:231] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[15:53:44:231] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[15:53:44:231] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:231] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:232] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:232] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[15:53:44:232] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[15:53:44:232] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[15:53:44:234] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[15:53:44:236] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[15:53:44:252] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[15:53:44:448] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[15:53:44:449] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[15:53:44:450] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 12.044 seconds (JVM running for 15.354)
[15:53:44:856] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[15:53:44:858] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[15:53:44:859] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[15:53:44:861] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[15:53:44:877] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 18 ms
[15:53:45:603] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[15:53:45:830] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[15:53:45:832] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[15:54:19:549] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:40) - 发送的url请求为：
[15:54:19:793] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:42) - 返回的结果是：
[16:09:50:045] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:09:50:458] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f4d319a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:09:51:713] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:09:53:230] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:09:53:233] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:09:53:262] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
[16:09:53:457] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:09:53:715] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:09:53:879] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d8b916a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:09:53:967] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$13e2ed70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:09:54:013] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$583963d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:09:54:018] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f4d319a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:09:54:693] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:09:54:723] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:09:54:741] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:09:54:742] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:09:54:750] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:09:54:966] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:09:54:967] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3223 ms
[16:09:55:136] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:09:55:136] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:09:55:144] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6f77f6e5
[16:09:57:771] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:09:57:873] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:09:57:873] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:09:57:984] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:09:58:055] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:09:59:556] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:09:59:597] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:09:59:734] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:09:59:734] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:09:59:861] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:09:59:861] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:10:00:117] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:10:00:805] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:10:00:805] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:10:00:805] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:10:00:806] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:10:00:806] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:10:00:806] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:10:00:806] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:10:01:066] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:10:01:070] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:10:01:074] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:10:01:083] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556007001081 with initial instances count: 4
[16:10:01:087] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:10:01:088] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556007001088, current=UP, previous=STARTING]
[16:10:01:090] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:10:01:122] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:10:01:142] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:10:01:157] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:10:01:162] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:10:01:163] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:10:01:164] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:10:01:165] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:166] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:10:01:166] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:166] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:10:01:167] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:10:01:167] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:168] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:10:01:168] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:169] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:10:01:170] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:170] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:10:01:171] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:10:01:176] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:10:01:178] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:10:01:203] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:203] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:211] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:211] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:218] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:10:01:219] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:10:01:235] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:10:01:245] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:10:01:261] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:262] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:262] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:262] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:263] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:263] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:265] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:265] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:297] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:297] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:297] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:298] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:298] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:10:01:299] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:10:01:300] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:10:01:302] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:10:01:305] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:305] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:306] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:306] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:307] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:10:01:307] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:10:01:311] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:10:01:313] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:10:01:316] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:316] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:317] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:317] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:317] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:10:01:317] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:10:01:319] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:10:01:321] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:10:01:323] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:323] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:324] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:325] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:325] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:10:01:325] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:10:01:328] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:10:01:329] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:10:01:331] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:331] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:332] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:332] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:332] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:10:01:332] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:10:01:334] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:10:01:335] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:10:01:338] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:338] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:10:01:339] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:10:01:339] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:10:01:340] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:341] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:342] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:342] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:10:01:343] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:10:01:343] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:10:01:346] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:10:01:347] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:10:01:366] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:10:01:495] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:10:01:497] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:10:01:499] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 13.438 seconds (JVM running for 16.506)
[16:10:03:019] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:10:03:022] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:10:03:022] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:10:03:025] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:10:03:037] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 15 ms
[16:10:03:691] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:10:03:870] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:10:03:872] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:11:42:656] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:11:43:003] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5845c6a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:11:44:314] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:11:46:135] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:11:46:138] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:11:46:175] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
[16:11:46:343] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:11:46:695] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:11:46:841] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3c2bc3ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:11:46:917] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$77559a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:11:46:943] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$bbac10dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:11:46:947] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5845c6a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:11:47:620] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:11:47:636] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:11:47:656] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:11:47:657] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:11:47:664] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:11:47:865] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:11:47:865] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3513 ms
[16:11:48:034] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:11:48:035] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:11:48:042] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4acab76d
[16:11:50:712] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:11:50:795] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:11:50:796] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:11:50:918] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:11:50:971] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:11:52:699] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:11:52:732] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:11:52:913] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:11:52:913] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:11:53:096] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:11:53:096] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:11:53:283] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:11:53:904] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:11:53:905] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:11:54:165] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:11:54:168] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:11:54:170] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:11:54:173] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556007114172 with initial instances count: 5
[16:11:54:178] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:11:54:178] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556007114178, current=UP, previous=STARTING]
[16:11:54:181] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:11:54:209] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:11:54:224] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:11:54:233] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:11:54:237] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:11:54:240] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:11:54:241] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:11:54:241] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:242] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:11:54:242] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:243] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:11:54:243] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:244] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:11:54:244] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:244] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:11:54:245] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:245] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:11:54:245] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:11:54:249] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:11:54:250] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:11:54:260] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:11:54:268] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:268] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:273] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:273] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:279] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:11:54:279] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:11:54:293] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:11:54:301] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:11:54:315] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:315] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:316] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:316] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:316] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:316] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:318] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:318] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:339] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:339] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:339] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:339] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:340] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:11:54:340] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:11:54:342] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:11:54:344] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:11:54:345] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:345] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:345] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:346] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:346] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:11:54:346] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:11:54:348] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:11:54:349] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:11:54:351] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:351] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:351] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:351] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:352] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:11:54:352] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:11:54:353] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:11:54:354] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:11:54:356] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:356] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:356] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:357] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:357] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:11:54:357] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:11:54:358] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:11:54:360] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:11:54:362] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:362] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:362] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:362] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:363] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:11:54:363] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:11:54:364] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:11:54:365] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:11:54:367] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:368] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:11:54:368] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:11:54:369] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:11:54:369] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:369] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:370] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:370] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:11:54:370] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:11:54:370] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:11:54:372] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:11:54:373] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:11:54:387] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:11:54:533] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:11:54:535] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:11:54:537] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 13.305 seconds (JVM running for 16.374)
[16:11:54:906] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:11:54:906] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:11:54:922] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 15 ms
[16:11:54:972] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:41) - 发送的url请求为：
[16:11:55:265] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:43) - 返回的结果是：
[16:11:55:691] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:11:55:697] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:11:56:400] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:11:56:597] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:11:56:599] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:12:35:456] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:41) - 发送的url请求为：
[16:12:35:642] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:43) - 返回的结果是：
[16:13:26:256] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:41) - 发送的url请求为：
[16:13:26:470] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:43) - 返回的结果是：
[16:13:32:555] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:41) - 发送的url请求为：
[16:13:32:720] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:43) - 返回的结果是：
[16:16:53:908] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:19:40:773] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:19:41:171] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$32af63b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:19:42:541] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:19:44:370] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:19:44:372] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:19:44:404] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
[16:19:44:607] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:19:44:994] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:19:45:227] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$169560b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:19:45:341] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$51bf3781] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:19:45:385] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$9615ade7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:19:45:393] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$32af63b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:19:46:296] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:19:46:312] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:19:46:326] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:19:46:327] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:19:46:333] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:19:46:530] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:19:46:530] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3970 ms
[16:19:46:656] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:19:46:657] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:19:46:663] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@22383ed
[16:19:49:449] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:19:49:543] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:19:49:544] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:19:49:695] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:19:49:745] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:19:51:447] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:19:51:522] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:19:51:690] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:19:51:691] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:19:51:838] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:19:51:838] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:19:52:122] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:19:52:752] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:19:52:752] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:19:52:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:19:52:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:19:52:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:19:52:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:19:52:753] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:19:52:969] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:19:52:973] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:19:52:979] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:19:52:985] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556007592984 with initial instances count: 5
[16:19:52:989] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:19:52:989] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556007592989, current=UP, previous=STARTING]
[16:19:52:993] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:19:53:014] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:19:53:039] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:19:53:052] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:19:53:055] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:19:53:055] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:19:53:057] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:19:53:058] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:19:53:059] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:060] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:19:53:060] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:060] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:19:53:061] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:062] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:19:53:062] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:063] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:19:53:063] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:064] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:19:53:065] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:19:53:074] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:19:53:076] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:19:53:117] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:118] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:129] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:129] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:136] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:19:53:136] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:19:53:149] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:19:53:157] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:19:53:169] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:169] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:169] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:169] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:170] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:170] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:171] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:172] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:202] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:202] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:203] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:203] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:204] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:19:53:205] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:19:53:207] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:19:53:210] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:19:53:213] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:213] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:213] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:213] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:214] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:19:53:214] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:19:53:216] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:19:53:218] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:19:53:223] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:223] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:223] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:224] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:224] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:19:53:224] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:19:53:227] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:19:53:229] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:19:53:233] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:234] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:234] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:234] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:235] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:19:53:235] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:19:53:237] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:19:53:239] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:19:53:241] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:242] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:242] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:242] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:243] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:19:53:243] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:19:53:245] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:19:53:246] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:19:53:249] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:249] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:19:53:250] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:19:53:250] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:19:53:251] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:251] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:251] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:252] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:19:53:252] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:19:53:253] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:19:53:256] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:19:53:257] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:19:53:271] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:19:53:423] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:19:53:425] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:19:53:428] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 14.449 seconds (JVM running for 17.939)
[16:19:54:524] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:19:54:524] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:19:54:525] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:19:54:528] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:19:54:553] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 28 ms
[16:19:55:233] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:19:55:409] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:19:55:410] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:20:11:768] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:42) - 发送的url请求为：
[16:22:37:699] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:22:38:069] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a2397f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:22:39:485] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:22:41:143] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:22:41:145] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:22:41:171] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
[16:22:41:435] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:22:41:812] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:22:42:018] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$861f7c82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:22:42:124] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$c149534e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:22:42:159] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$59fc9b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:22:42:165] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a2397f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:22:42:930] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:22:42:950] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:22:42:969] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:22:42:970] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:22:42:977] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:22:43:158] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:22:43:159] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3618 ms
[16:22:43:304] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:22:43:305] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:22:43:313] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7cb93d72
[16:22:46:480] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:22:46:608] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:22:46:608] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:22:46:755] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:22:46:818] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:22:48:948] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:22:49:015] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:22:49:248] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:22:49:248] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:22:49:438] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:22:49:439] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:22:49:797] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:22:50:581] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:22:50:581] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:22:50:581] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:22:50:581] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:22:50:582] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:22:50:582] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:22:50:582] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:22:50:919] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:22:50:925] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:22:50:929] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:22:50:933] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556007770932 with initial instances count: 5
[16:22:50:938] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:22:50:939] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556007770939, current=UP, previous=STARTING]
[16:22:50:943] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:22:50:975] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:22:50:993] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:22:51:009] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:22:51:012] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:22:51:012] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:22:51:014] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:22:51:015] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:22:51:016] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:017] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:22:51:018] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:018] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:22:51:019] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:020] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:22:51:020] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:021] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:22:51:022] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:023] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:22:51:023] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:22:51:029] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:22:51:030] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:22:51:060] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:061] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:070] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:071] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:078] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:22:51:078] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:22:51:098] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:22:51:108] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:22:51:138] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:139] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:139] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:140] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:140] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:141] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:143] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:144] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:182] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:182] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:183] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:183] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:184] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:22:51:184] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:22:51:188] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:22:51:190] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:22:51:193] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:193] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:194] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:194] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:194] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:22:51:194] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:22:51:197] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:22:51:199] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:22:51:203] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:203] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:204] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:204] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:204] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:22:51:204] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:22:51:207] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:22:51:209] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:22:51:212] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:212] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:213] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:213] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:213] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:22:51:214] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:22:51:216] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:22:51:220] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:22:51:225] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:226] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:226] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:227] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:227] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:22:51:227] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:22:51:231] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:22:51:232] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:22:51:236] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:236] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:22:51:238] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:22:51:238] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:22:51:239] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:239] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:239] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:240] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:22:51:240] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:22:51:240] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:22:51:243] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:22:51:244] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:22:51:254] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:22:51:413] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:22:51:414] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:22:51:416] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 15.435 seconds (JVM running for 19.075)
[16:22:52:716] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:22:52:723] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:22:53:527] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:22:53:855] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:22:53:860] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:22:54:400] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:22:54:400] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:22:54:429] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 29 ms
[16:22:58:312] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:22:58:598] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:48) - 返回的结果是：
[16:27:50:586] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:29:16:844] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:29:17:146] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d40c9561] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:29:18:303] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:29:19:630] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:29:19:633] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:29:19:655] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces.
[16:29:19:815] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:29:20:087] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:29:20:200] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b7f29264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:29:20:284] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$f31c6930] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:29:20:315] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$3772df96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:29:20:320] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d40c9561] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:29:20:984] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:29:20:998] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:29:21:011] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:29:21:011] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:29:21:018] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:29:21:168] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:29:21:169] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 2851 ms
[16:29:21:313] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:29:21:313] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:29:21:320] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5e4d1964
[16:29:23:995] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:29:24:094] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:29:24:094] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:29:24:239] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:29:24:288] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:29:25:787] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:29:25:831] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:29:25:985] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:29:25:985] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:29:26:111] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:29:26:112] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:29:26:335] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:29:26:904] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:29:26:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:29:26:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:29:26:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:29:26:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:29:26:905] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:29:26:906] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:29:27:140] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:29:27:144] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:29:27:147] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:29:27:152] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556008167150 with initial instances count: 5
[16:29:27:155] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:29:27:155] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556008167155, current=UP, previous=STARTING]
[16:29:27:167] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:29:27:189] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:29:27:207] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:29:27:221] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:29:27:224] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:29:27:226] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:29:27:227] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:29:27:227] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:228] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:29:27:228] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:229] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:29:27:229] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:229] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:29:27:230] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:230] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:29:27:231] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:232] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:29:27:232] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:29:27:237] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:29:27:237] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:29:27:238] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:29:27:263] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:263] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:269] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:270] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:276] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:29:27:276] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:29:27:294] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:29:27:302] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:29:27:321] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:321] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:322] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:322] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:322] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:322] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:324] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:324] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:351] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:352] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:352] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:352] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:353] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:29:27:353] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:29:27:355] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:29:27:359] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:29:27:361] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:362] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:362] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:362] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:362] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:29:27:363] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:29:27:364] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:29:27:365] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:29:27:369] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:369] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:369] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:369] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:369] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:29:27:370] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:29:27:371] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:29:27:372] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:29:27:375] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:375] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:376] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:376] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:376] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:29:27:376] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:29:27:377] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:29:27:379] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:29:27:381] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:381] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:382] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:382] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:382] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:29:27:382] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:29:27:384] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:29:27:384] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:29:27:387] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:387] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:29:27:388] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:29:27:389] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:29:27:389] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:389] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:390] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:390] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:29:27:390] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:29:27:390] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:29:27:393] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:29:27:394] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:29:27:404] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:29:27:536] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:29:27:537] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:29:27:540] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 12.212 seconds (JVM running for 15.196)
[16:29:28:405] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:29:28:407] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:29:28:408] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:29:28:410] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:29:28:421] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 13 ms
[16:29:29:122] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:29:29:331] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:29:29:333] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:29:37:839] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:33:51:611] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:33:51:957] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5040b20f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:33:53:253] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:33:54:769] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:33:54:774] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:33:54:807] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
[16:33:55:019] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:33:55:316] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:33:55:453] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3426af12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:33:55:532] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$6f5085de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:33:55:562] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b3a6fc44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:33:55:567] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5040b20f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:33:56:225] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:33:56:240] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:33:56:261] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:33:56:263] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:33:56:271] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:33:56:441] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:33:56:442] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3168 ms
[16:33:56:604] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:33:56:605] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:33:56:612] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@34b8e72f
[16:33:59:122] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:33:59:220] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:33:59:220] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:33:59:327] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:33:59:374] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:34:00:835] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:34:00:867] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:34:00:985] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:34:00:985] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:34:01:117] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:34:01:117] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:34:01:370] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:34:01:930] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:34:01:930] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:34:01:930] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:34:01:930] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:34:01:931] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:34:01:931] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:34:01:931] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:34:02:174] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:34:02:179] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:34:02:182] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:34:02:186] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556008442185 with initial instances count: 5
[16:34:02:188] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:34:02:188] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556008442188, current=UP, previous=STARTING]
[16:34:02:191] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:34:02:209] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:34:02:219] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:34:02:229] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:34:02:231] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:34:02:233] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:34:02:233] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:34:02:234] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:234] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:34:02:234] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:235] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:34:02:235] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:235] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:34:02:235] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:236] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:34:02:236] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:236] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:34:02:236] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:34:02:239] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:34:02:240] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:34:02:248] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:34:02:257] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:258] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:264] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:264] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:268] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:34:02:269] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:34:02:281] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:34:02:292] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:34:02:308] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:308] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:308] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:309] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:309] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:309] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:311] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:311] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:330] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:330] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:330] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:330] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:331] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:34:02:331] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:34:02:332] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:34:02:334] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:34:02:335] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:336] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:336] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:336] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:336] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:34:02:336] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:34:02:338] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:34:02:338] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:34:02:340] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:340] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:340] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:340] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:340] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:34:02:341] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:34:02:342] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:34:02:343] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:34:02:344] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:345] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:345] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:345] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:345] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:34:02:346] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:34:02:346] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:34:02:347] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:34:02:348] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:348] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:349] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:349] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:349] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:34:02:349] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:34:02:351] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:34:02:351] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:34:02:353] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:353] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:34:02:353] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:34:02:353] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:34:02:354] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:354] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:354] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:354] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:34:02:354] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:34:02:354] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:34:02:356] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:34:02:356] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:34:02:364] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:34:02:502] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:34:02:503] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:34:02:505] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 12.295 seconds (JVM running for 15.238)
[16:34:03:604] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:34:03:604] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:34:03:604] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:34:03:612] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:34:03:628] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 24 ms
[16:34:04:354] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:34:04:533] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:34:04:534] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:34:12:799] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:34:13:216] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:54) - 查询到的id
[16:34:48:746] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:34:49:003] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:54) - 查询到的id
[16:38:35:124] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:38:35:531] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eb671c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:36:963] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:38:38:745] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:38:38:747] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:38:38:771] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
[16:38:38:962] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:38:39:270] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:38:39:428] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cf4d1951] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:39:544] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$a76f01d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:39:596] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$4ecd6683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:39:601] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eb671c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:40:341] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:38:40:354] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:38:40:369] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:38:40:370] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:38:40:378] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:38:40:557] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:38:40:558] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 3577 ms
[16:38:40:729] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:38:40:729] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:38:40:738] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@492d6723
[16:38:43:851] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:38:43:969] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:38:43:969] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:38:44:100] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:38:44:161] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:38:46:143] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:38:46:189] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:38:46:425] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:38:46:425] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:38:46:610] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:38:46:610] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:38:46:940] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:38:47:642] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:38:47:642] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:38:47:642] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:38:47:643] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:38:47:643] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:38:47:643] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:38:47:644] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:38:47:971] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:38:47:975] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:38:47:978] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:38:47:983] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556008727981 with initial instances count: 5
[16:38:47:986] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:38:47:986] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556008727986, current=UP, previous=STARTING]
[16:38:47:989] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:38:48:011] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:38:48:035] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:38:48:044] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:38:48:048] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:38:48:051] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:38:48:052] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:38:48:052] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:053] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:38:48:053] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:054] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:38:48:054] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:054] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:38:48:054] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:055] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:38:48:055] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:056] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:38:48:056] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:38:48:059] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:38:48:059] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:38:48:061] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:38:48:090] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:090] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:098] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:099] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:107] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:38:48:107] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:38:48:125] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:38:48:133] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:38:48:146] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:146] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:147] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:147] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:147] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:147] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:149] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:149] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:170] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:170] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:171] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:171] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:172] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:38:48:172] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:38:48:174] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:38:48:177] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:38:48:180] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:180] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:181] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:181] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:182] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:38:48:182] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:38:48:185] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:38:48:187] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:38:48:190] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:190] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:190] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:191] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:191] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:38:48:192] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:38:48:195] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:38:48:197] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:38:48:200] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:201] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:201] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:201] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:202] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:38:48:202] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:38:48:205] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:38:48:207] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:38:48:210] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:210] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:211] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:211] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:211] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:38:48:211] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:38:48:213] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:38:48:214] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:38:48:217] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:217] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:38:48:219] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:38:48:219] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:38:48:220] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:220] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:221] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:221] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:38:48:222] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:38:48:222] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:38:48:225] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:38:48:227] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:38:48:240] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:38:48:425] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:38:48:427] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:38:48:429] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 14.995 seconds (JVM running for 18.353)
[16:38:49:519] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:38:49:525] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:38:49:528] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:38:49:529] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:38:49:564] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 35 ms
[16:38:50:321] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:38:50:546] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:38:50:550] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:39:09:941] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:39:10:360] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:53) - 查询到的idnull
[16:41:16:915] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:41:17:212] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bab77ddf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:41:18:257] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:41:19:524] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:41:19:526] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:41:19:546] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces.
[16:41:19:681] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:41:19:922] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:41:20:086] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9e9d7ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:41:20:172] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$d9c751ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:41:20:212] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$1e1dc814] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:41:20:217] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bab77ddf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:41:20:807] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:41:20:822] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:41:20:840] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:41:20:842] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:41:20:865] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:41:21:016] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:41:21:017] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 2746 ms
[16:41:21:147] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:41:21:148] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:41:21:153] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@51f9e374
[16:41:23:602] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:41:23:794] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:41:23:795] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:41:23:916] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:41:23:976] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:41:25:438] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:41:25:474] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:41:25:631] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:41:25:631] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:41:25:828] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:41:25:829] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:41:26:095] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:41:26:680] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:41:26:680] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:41:26:680] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:41:26:681] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:41:26:681] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:41:26:681] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:41:26:681] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:41:26:882] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:41:26:885] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:41:26:888] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:41:26:891] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556008886890 with initial instances count: 5
[16:41:26:894] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:41:26:894] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556008886894, current=UP, previous=STARTING]
[16:41:26:896] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:41:26:914] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:41:26:927] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:41:26:936] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:41:26:939] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:41:26:940] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:41:26:942] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:41:26:942] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:943] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:41:26:944] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:945] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:41:26:945] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:946] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:41:26:947] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:948] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:41:26:949] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:951] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:41:26:951] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:41:26:958] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:41:26:959] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:41:26:961] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:41:26:986] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:26:986] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:26:991] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:26:991] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:26:995] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:41:26:995] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:41:27:007] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:41:27:014] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:41:27:025] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:025] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:026] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:026] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:026] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:026] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:027] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:028] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:048] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:049] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:049] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:049] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:050] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:41:27:050] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:41:27:052] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:41:27:054] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:41:27:056] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:056] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:056] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:057] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:057] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:41:27:057] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:41:27:059] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:41:27:060] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:41:27:062] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:063] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:064] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:064] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:065] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:41:27:065] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:41:27:069] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:41:27:072] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:41:27:075] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:076] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:076] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:077] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:078] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:41:27:078] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:41:27:080] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:41:27:081] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:41:27:083] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:083] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:083] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:084] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:084] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:41:27:084] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:41:27:086] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:41:27:087] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:41:27:088] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:088] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:41:27:089] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:41:27:089] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:41:27:089] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:089] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:090] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:090] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:41:27:090] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:41:27:090] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:41:27:092] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:41:27:094] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:41:27:104] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:41:27:212] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:41:27:213] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:41:27:215] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 11.675 seconds (JVM running for 14.635)
[16:41:29:697] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:41:29:700] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:41:29:700] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:41:29:704] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:41:29:716] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 15 ms
[16:41:30:529] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:41:30:796] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:41:30:797] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[16:41:38:056] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:41:38:472] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:53) - 查询到的idnull
[16:42:08:619] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:44) - 发送的url请求为：
[16:42:08:921] [INFO] - top.harvie.ProjectTeam.service.UserService.code(UserService.java:53) - 查询到的id4
[16:45:25:110] [INFO] - org.springframework.boot.logging.DeferredLog.logTo(DeferredLog.java:227) - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[16:45:25:426] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$406eb023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:45:26:647] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:679) - The following profiles are active: default
[16:45:27:955] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[16:45:27:957] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[16:45:27:986] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
[16:45:28:132] [WARN] - org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:135) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[16:45:28:365] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:294) - BeanFactory id=f54a9b35-e0bc-31e0-beb0-cb7fcf514ad4
[16:45:28:495] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2454ad26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:45:28:561] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'redisConfig' of type [top.harvie.ProjectTeam.conf.RedisConfig$$EnhancerBySpringCGLIB$$5f7e83f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:45:28:587] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$a3d4fa58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:45:28:593] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$406eb023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:45:29:225] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8081 (https)
[16:45:29:240] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["https-jsse-nio-8081"]
[16:45:29:253] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:45:29:254] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[16:45:29:261] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk-11.0.2\bin;C:\Program Files\Java\jdk-11.0.2\jre\bin;C:\Program Files\maven\apache-maven-3.6.0\bin\;E:\mysql-8.0.15-winx64\bin;C:\Users\yhy\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.5\bin;;E:\SSH;.]
[16:45:29:416] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:45:29:417] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 2736 ms
[16:45:29:534] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:45:29:534] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:45:29:540] [INFO] - com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@65c8b6f1
[16:45:31:890] [INFO] - org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:59) - Exposing 19 endpoint(s) beneath base path '/actuator'
[16:45:31:981] [WARN] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
[16:45:31:981] [INFO] - com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[16:45:32:101] [INFO] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[16:45:32:145] [INFO] - org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57) - LiveReload server is running on port 35729
[16:45:33:593] [INFO] - org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
[16:45:33:625] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349) - Initializing Eureka in region us-east-1
[16:45:33:757] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
[16:45:33:757] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
[16:45:33:928] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
[16:45:33:929] [INFO] - com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
[16:45:34:229] [INFO] - com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958) - Disable delta property : false
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959) - Single vip registry refresh property : null
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960) - Force full registry fetch : false
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961) - Application is null : false
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962) - Registered Applications size is zero : true
[16:45:34:753] [INFO] - com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964) - Application version is -1: true
[16:45:34:754] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047) - Getting all instance registry info from the eureka server
[16:45:34:973] [INFO] - com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1056) - The response status is 200
[16:45:34:975] [INFO] - com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1270) - Starting heartbeat executor: renew interval is: 30
[16:45:34:978] [INFO] - com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60) - InstanceInfoReplicator onDemand update allowed rate per min is 4
[16:45:34:985] [INFO] - com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449) - Discovery Client initialized at timestamp 1556009134983 with initial instances count: 4
[16:45:34:988] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:42) - Registering application USER-SERVICE with eureka with status UP
[16:45:34:989] [INFO] - com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1305) - Saw local status change event StatusChangeEvent [timestamp=1556009134989, current=UP, previous=STARTING]
[16:45:34:992] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081: registering service...
[16:45:35:028] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:80) - Context refreshed
[16:45:35:043] [INFO] - springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:83) - Found {0} custom documentation plugin(s)
[16:45:35:054] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:53) - Scanning for api listing references
[16:45:35:057] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:45:35:059] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: uploadFile belongs to groups: [[ResourceGroup{groupName='filecontroller', position=0, controller=top.harvie.ProjectTeam.controller.FileController}]] 
[16:45:35:060] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:45:35:060] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: select belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:061] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:45:35:061] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: code belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:062] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:45:35:062] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: delete belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:063] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:45:35:063] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: update belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:063] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:45:35:064] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: add belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:064] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:45:35:064] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:72) - Request mapping: selectById belongs to groups: [[ResourceGroup{groupName='user', position=0, controller=top.harvie.ProjectTeam.controller.UserController}]] 
[16:45:35:071] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/filecontroller Description: filecontroller Position: 0
[16:45:35:073] [INFO] - com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:835) - DiscoveryClient_USER-SERVICE/DESKTOP-KRVLQ2R:User-Service:8081 - registration status: 204
[16:45:35:074] [INFO] - springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:84) - Created resource listing Path: /top.harvie/user Description: user Position: 0
[16:45:35:091] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:091] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:095] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:096] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:099] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:45:35:100] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/uploadFile.top.harvie.ProjectTeam.controller.FileController.uploadFile.CodeGenGenericTypeNamingStrategy
[16:45:35:112] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:45:35:119] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method uploadFile was filecontroller
[16:45:35:130] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:130] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:130] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:130] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:130] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:131] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:132] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:132] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:151] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:151] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:151] [INFO] - springfox.documentation.schema.property.ModelPropertiesKeyGenerator.generate(ModelPropertiesKeyGenerator.java:48) - Cache key generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:151] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache modelProperties with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:152] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:45:35:152] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.add.CodeGenGenericTypeNamingStrategy
[16:45:35:154] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:45:35:155] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method add was user
[16:45:35:157] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:157] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:157] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:157] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:157] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:45:35:158] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/code.top.harvie.ProjectTeam.controller.UserController.code.CodeGenGenericTypeNamingStrategy
[16:45:35:159] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:45:35:160] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method code was user
[16:45:35:161] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:162] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:162] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:162] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:162] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:45:35:163] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/delete.top.harvie.ProjectTeam.controller.UserController.delete.CodeGenGenericTypeNamingStrategy
[16:45:35:164] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:45:35:165] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method delete was user
[16:45:35:166] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:167] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:167] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:45:35:167] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/all.top.harvie.ProjectTeam.controller.UserController.select.CodeGenGenericTypeNamingStrategy
[16:45:35:168] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:45:35:169] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method select was user
[16:45:35:171] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:171] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:171] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:171] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:171] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:45:35:171] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user.top.harvie.ProjectTeam.controller.UserController.selectById.CodeGenGenericTypeNamingStrategy
[16:45:35:173] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:45:35:174] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method selectById was user
[16:45:35:175] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:175] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key java.lang.Object(true)
[16:45:35:176] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: java.lang.Object(true)
[16:45:35:176] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key java.lang.Object(true)
[16:45:35:176] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:176] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache models with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:177] [INFO] - springfox.documentation.schema.ModelContextKeyGenerator.generate(ModelContextKeyGenerator.java:46) - Cache Key Generated: top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:177] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.modelsAndDependencies(CachingAspect.java:79) - Caching aspect applied for cache modelDependencies with key top.harvie.ProjectTeam.dao.pojo.User(false)
[16:45:35:177] [INFO] - springfox.documentation.spring.web.OperationsKeyGenerator.generate(OperationsKeyGenerator.java:51) - Cache key generated: /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:45:35:177] [INFO] - springfox.documentation.spring.web.caching.CachingAspect.operationsAndProperties(CachingAspect.java:68) - Caching aspect applied for cache operations with key /api/user/update.top.harvie.ProjectTeam.controller.UserController.update.CodeGenGenericTypeNamingStrategy
[16:45:35:179] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:45:35:180] [INFO] - springfox.documentation.swagger.web.ClassOrApiAnnotationResourceGrouping$1.apply(ClassOrApiAnnotationResourceGrouping.java:100) - Group for method update was user
[16:45:35:190] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["https-jsse-nio-8081"]
[16:45:35:313] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8081 (https) with context path ''
[16:45:35:314] [INFO] - org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:141) - Updating port to 8081
[16:45:35:316] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ProjectTeamApplication in 11.454 seconds (JVM running for 14.252)
[16:45:36:595] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[16:45:36:596] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[16:45:36:621] [INFO] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 25 ms
[16:45:37:749] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:45:37:752] [WARN] - com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
[16:45:38:324] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:45:38:474] [INFO] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[16:45:38:475] [INFO] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
